name: Continuous Integration

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 1 * * SUN'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:    
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        runtime: [win-x64, win-x86, linux-x64, osx-x64]
        exclude:
          - os: windows-latest
            runtime: linux-x64
          - os: windows-latest
            runtime: osx-x64
          - os: ubuntu-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: win-x86
          - os: ubuntu-latest
            runtime: osx-x64
          - os: macos-latest
            runtime: win-x64
          - os: macos-latest
            runtime: win-x86
          - os: macos-latest
            runtime: linux-x64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Dotnet restore
        shell: bash
        run: |
          dotnet restore "${{ github.workspace }}/HelloWorldPublisher/HelloWorldPublisher.csproj" --packages "${{ github.workspace }}/packages" --no-cache
          dotnet restore "${{ github.workspace }}/HelloWorldSubscriber/HelloWorldSubscriber.csproj" --packages "${{ github.workspace }}/packages" --no-cache
          dotnet restore "${{ github.workspace }}/TestMessage/TestMessage.csproj" --packages "${{ github.workspace }}/packages" --no-cache
        working-directory: ${{ github.workspace }}
        
      - name: Dotnet build
        shell: bash
        run: |
          dotnet build "${{ github.workspace }}/HelloWorldPublisher/HelloWorldPublisher.csproj" --configuration Release --runtime ${{ matrix.runtime }} --no-self-contained
          dotnet build "${{ github.workspace }}/HelloWorldSubscriber/HelloWorldSubscriber.csproj" --configuration Release --runtime ${{ matrix.runtime }} --no-self-contained
        working-directory: ${{ github.workspace }}
        
      - name: Dotnet publish
        shell: bash
        run: |
          dotnet publish "${{ github.workspace }}/HelloWorldPublisher/HelloWorldPublisher.csproj" --configuration Release --runtime ${{ matrix.runtime }} --no-self-contained
          dotnet publish "${{ github.workspace }}/HelloWorldSubscriber/HelloWorldSubscriber.csproj" --configuration Release --runtime ${{ matrix.runtime }} --no-self-contained
        working-directory: ${{ github.workspace }}
        
      - name: Artifact HelloWorldPublisher
        uses: actions/upload-artifact@v3
        with:
          name: openddsharp-helloworld-publisher-${{ matrix.runtime }}
          path: |
            ${{ github.workspace }}/HelloWorldPublisher/bin/Release/net6.0/${{ matrix.runtime }}/publish/*
            
      - name: Artifact HelloWorldSubscriber
        uses: actions/upload-artifact@v3
        with:
          name: openddsharp-helloworld-subscriber-${{ matrix.runtime }}
          path: |
            ${{ github.workspace }}/HelloWorldSubscriber/bin/Release/net6.0/${{ matrix.runtime }}/publish/*